from gvtest.testsuite import Shell, Checker, Testset, Test

def check_output(_test: Test, output: str):

    expected = \
        'Read value 12345678\n' \
        'Read value 12345679\n' \
        'Read value 1234567a\n' \
        'Read value 1234567b\n' \
        'Read value 1234567c\n' \
        'Read value 1234567d\n' \
        'Read value 1234567e\n' \
        'Read value 1234567f\n' \
        'Read value 12345680\n' \
        'Read value 12345681\n'

    if output.find(expected) == -1:
        return (False, "Didn't find output string\n")

    return (True, None)

def testset_build(testset: Testset):

    test = testset.new_test('17_how_to_control_gvsoc_from_an_external_simulator')
    test.add_command(Shell('clean', f'make clean BUILDDIR={test.get_path()}'))
    test.add_command(Shell('gvsoc', f'make prepare gvsoc BUILDDIR={test.get_path()}'))
    test.add_command(Shell('all', f'make all config BUILDDIR={test.get_path()}'))
    test.add_command(Shell('run', f'make run_launcher BUILDDIR={test.get_path()}'))
    test.add_command(Checker('check', check_output))
