from plptest.testsuite import *

# Called by plptest to declare the tests
def testset_build(testset):

    #
    # Test list decription
    #

    testset.new_make_test('single_router.async.r', flags="ASYNC=1")
    testset.new_make_test('single_router.async.rw', flags="ASYNC=1 ACCESS_RW=1")
    testset.new_make_test('single_router.async.shared_rw', flags="ASYNC=1 ACCESS_RW=1 SHARED_RW=1")
    testset.new_make_test('single_router.async.fifo', flags="ASYNC=1 ACCESS_RW=1 INPUT_FIFO_SIZE=4")
    testset.new_make_test('single_router.async.big_packet', flags="ASYNC=1 ACCESS_RW=1 PACKET_SIZE=16")
    testset.new_make_test('single_router.async.small_packet', flags="ASYNC=1 ACCESS_RW=1 PACKET_SIZE=2")

    testset.new_make_test('single_router.async.target_bw4.r', flags="ASYNC=1 TARGET_BW=4")
    testset.new_make_test('single_router.async.target_bw4_rw', flags="ASYNC=1 TARGET_BW=4 ACCESS_RW=1")
    testset.new_make_test('single_router.async.target_bw4_shared_rw', flags="ASYNC=1 TARGET_BW=4 ACCESS_RW=1 SHARED_RW=1")
    testset.new_make_test('single_router.async.target_bw4_fifo', flags="ASYNC=1 TARGET_BW=4 ACCESS_RW=1 INPUT_FIFO_SIZE=4")
    testset.new_make_test('single_router.async.target_bw4_big_packet', flags="ASYNC=1 TARGET_BW=4 ACCESS_RW=1 PACKET_SIZE=16")
    testset.new_make_test('single_router.async.target_bw4_small_packet', flags="ASYNC=1 TARGET_BW=4 ACCESS_RW=1 PACKET_SIZE=2")

    testset.new_make_test('single_router.async.target_bw2.r', flags="ASYNC=1 TARGET_BW=2")
    testset.new_make_test('single_router.async.target_bw2_rw', flags="ASYNC=1 TARGET_BW=2 ACCESS_RW=1")
    testset.new_make_test('single_router.async.target_bw2_shared_rw', flags="ASYNC=1 TARGET_BW=2 ACCESS_RW=1 SHARED_RW=1")
    testset.new_make_test('single_router.async.target_bw2_fifo', flags="ASYNC=1 TARGET_BW=2 ACCESS_RW=1 INPUT_FIFO_SIZE=4")
    testset.new_make_test('single_router.async.target_bw2_big_packet', flags="ASYNC=1 TARGET_BW=2 ACCESS_RW=1 PACKET_SIZE=16")
    testset.new_make_test('single_router.async.target_bw2_small_packet', flags="ASYNC=1 TARGET_BW=2 ACCESS_RW=1 PACKET_SIZE=2")

    testset.new_make_test('single_router.sync.r', flags="")
    testset.new_make_test('single_router.sync.rw', flags="ACCESS_RW=1")
    testset.new_make_test('single_router.sync.shared_rw', flags="ACCESS_RW=1 SHARED_RW=1")
    testset.new_make_test('single_router.sync.fifo', flags="ACCESS_RW=1 INPUT_FIFO_SIZE=4")
    testset.new_make_test('single_router.sync.big_packet', flags="ACCESS_RW=1 PACKET_SIZE=16")
    testset.new_make_test('single_router.sync.small_packet', flags="ACCESS_RW=1 PACKET_SIZE=2")

    testset.new_make_test('single_router.sync.target_bw4.r', flags="TARGET_BW=4")
    testset.new_make_test('single_router.sync.target_bw4_rw', flags="TARGET_BW=4 ACCESS_RW=1")
    testset.new_make_test('single_router.sync.target_bw4_shared_rw', flags="TARGET_BW=4 ACCESS_RW=1 SHARED_RW=1")
    testset.new_make_test('single_router.sync.target_bw4_fifo', flags="TARGET_BW=4 ACCESS_RW=1 INPUT_FIFO_SIZE=4")
    testset.new_make_test('single_router.sync.target_bw4_big_packet', flags="TARGET_BW=4 ACCESS_RW=1 PACKET_SIZE=16")
    testset.new_make_test('single_router.sync.target_bw4_small_packet', flags="TARGET_BW=4 ACCESS_RW=1 PACKET_SIZE=2")

    testset.new_make_test('single_router.sync.target_bw2.r', flags="TARGET_BW=2")
    testset.new_make_test('single_router.sync.target_bw2_rw', flags="TARGET_BW=2 ACCESS_RW=1")
    testset.new_make_test('single_router.sync.target_bw2_shared_rw', flags="TARGET_BW=2 ACCESS_RW=1 SHARED_RW=1")
    testset.new_make_test('single_router.sync.target_bw2_fifo', flags="TARGET_BW=2 ACCESS_RW=1 INPUT_FIFO_SIZE=4")
    testset.new_make_test('single_router.sync.target_bw2_big_packet', flags="TARGET_BW=2 ACCESS_RW=1 PACKET_SIZE=16")
    testset.new_make_test('single_router.sync.target_bw2_small_packet', flags="TARGET_BW=2 ACCESS_RW=1 PACKET_SIZE=2")

    testset.new_make_test('single_router.async.rcv.r', flags="RCV=1 ASYNC=1")
    testset.new_make_test('single_router.async.rcv.rw', flags="RCV=1 ASYNC=1 ACCESS_RW=1")
    testset.new_make_test('single_router.async.rcv.shared_rw', flags="RCV=1 ASYNC=1 ACCESS_RW=1 SHARED_RW=1")
    testset.new_make_test('single_router.async.rcv.fifo', flags="RCV=1 ASYNC=1 ACCESS_RW=1 INPUT_FIFO_SIZE=4")
    testset.new_make_test('single_router.async.rcv.big_packet', flags="RCV=1 ASYNC=1 ACCESS_RW=1 PACKET_SIZE=16")
    testset.new_make_test('single_router.async.rcv.small_packet', flags="RCV=1 ASYNC=1 ACCESS_RW=1 PACKET_SIZE=2")

    testset.new_make_test('single_router.async.rcv.target_bw4.r', flags="RCV=1 ASYNC=1 TARGET_BW=4")
    testset.new_make_test('single_router.async.rcv.target_bw4_rw', flags="RCV=1 ASYNC=1 TARGET_BW=4 ACCESS_RW=1")
    testset.new_make_test('single_router.async.rcv.target_bw4_shared_rw', flags="RCV=1 ASYNC=1 TARGET_BW=4 ACCESS_RW=1 SHARED_RW=1")
    testset.new_make_test('single_router.async.rcv.target_bw4_fifo', flags="RCV=1 ASYNC=1 TARGET_BW=4 ACCESS_RW=1 INPUT_FIFO_SIZE=4")
    testset.new_make_test('single_router.async.rcv.target_bw4_big_packet', flags="RCV=1 ASYNC=1 TARGET_BW=4 ACCESS_RW=1 PACKET_SIZE=16")
    testset.new_make_test('single_router.async.rcv.target_bw4_small_packet', flags="RCV=1 ASYNC=1 TARGET_BW=4 ACCESS_RW=1 PACKET_SIZE=2")

    testset.new_make_test('single_router.async.rcv.target_bw2.r', flags="RCV=1 ASYNC=1 TARGET_BW=2")
    testset.new_make_test('single_router.async.rcv.target_bw2_rw', flags="RCV=1 ASYNC=1 TARGET_BW=2 ACCESS_RW=1")
    testset.new_make_test('single_router.async.rcv.target_bw2_shared_rw', flags="RCV=1 ASYNC=1 TARGET_BW=2 ACCESS_RW=1 SHARED_RW=1")
    testset.new_make_test('single_router.async.rcv.target_bw2_fifo', flags="RCV=1 ASYNC=1 TARGET_BW=2 ACCESS_RW=1 INPUT_FIFO_SIZE=4")
    testset.new_make_test('single_router.async.rcv.target_bw2_big_packet', flags="RCV=1 ASYNC=1 TARGET_BW=2 ACCESS_RW=1 PACKET_SIZE=16")
    testset.new_make_test('single_router.async.rcv.target_bw2_small_packet', flags="RCV=1 ASYNC=1 TARGET_BW=2 ACCESS_RW=1 PACKET_SIZE=2")
